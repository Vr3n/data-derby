"""Competition Stat Type - stattype fk changed to name as it is now unique.

Revision ID: 812148c0eae1
Revises: 31501b0117d5
Create Date: 2025-02-28 12:20:48.562257

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '812148c0eae1'
down_revision: Union[str, None] = '31501b0117d5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index(op.f('ix_stattype_name'), 'stattype', ['name'], unique=True)
    op.drop_constraint('competitionteamstats_stat_type_id_fkey', 'competitionteamstats', type_='foreignkey')
    op.alter_column('competitionteamstats', 'stat_type_id',
               existing_type=sa.UUID(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=False)
    op.create_foreign_key(None, 'competitionteamstats', 'stattype', ['stat_type_id'], ['name'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_stattype_name'), table_name='stattype')
    op.create_unique_constraint('unique_name', 'stattype', ['name'])
    op.drop_constraint(None, 'competitionteamstats', type_='foreignkey')
    op.create_foreign_key('competitionteamstats_stat_type_id_fkey', 'competitionteamstats', 'stattype', ['stat_type_id'], ['id'])
    op.alter_column('competitionteamstats', 'stat_type_id',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.UUID(),
               existing_nullable=False)
    # ### end Alembic commands ###
